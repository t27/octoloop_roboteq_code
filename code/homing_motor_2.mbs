
' Home search
' @Octoloop
' @Tarang Shah
' Command to initiate homing - !VAR 1 1
' Variable which contains the homing flag = VAR 1, homing starts when flag is 1, flag resets on homing end

' HomingLogic
' Move at a slow speed in 1 direction. By giving the motor command continuosly
' Keep checking the CR register every few ms
' The CR reg contains the delta in position from the last time you checked its value
' Now when the index pulse is crossed, the encoder value goes from a finite large value to suddenly 0, 
' Hence if the home was crossed, the CR will be negative. 
' So if CR is negative stop, else keep giving the motor command and keep checking CR 

print("starting ... \r")
setcommand(_VAR, 1, 0) ' initialise the flag to 0, hence no auto home when starting
mainloop:
'read value of variable no 1, ie the homing flag
home_flag = getvalue(_VAR, 1)
if (home_flag = 1)
	' Start homing routine
	GoSub homing_routine
end if
' set the home flag variable to 0
setcommand(_VAR, 1, 0)
wait(20) ' wait to allow the normal controller functions to execute, can increase this
goto mainloop

homing_routine:
	print("Inside homeroute\n")
   	setconfig(_MMOD, 1, 0)
	' Loop until we reach home
	stillhoming:
	setcommand(_G, 1, 100) ' the value here is proportional to the motor speed(vary according to motor, 100 for small, 200 for big), can increase this
	wait(2)
	valu = getvalue(_CR, 1)'Reading the Relative Count (count difference)
	if (valu < 0) 'If the diff is negative, we have reached the home(since the counter is bieng reset by index pulse)
		print("Home Done\n")
		counter = getvalue(_C, 1) ' read actual counter position
		print(counter)
		setcommand(_P, 1, counter) ' make current position become destination so that the motor doesnt move
		setconfig(_MMOD, 1, 3) ' Switch to closed loop encoder count mode
		setcommand(_P, 1, 0)
		return
	else
	    ' Not homed yet
		print(valu, "\n")
		wait(5) ' wait between measurement of CR, can decrease this depending on motor speed
		goto stillhoming
	end if



